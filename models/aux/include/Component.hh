#ifndef Component_HH
#define Component_HH
/********************************* TRICK HEADER *******************************
PURPOSE:
      (Describe the Component of vehicle)
LIBRARY DEPENDENCY:
      ((../src/Component.cpp))
*******************************************************************************/
enum ActType {
    X = 0,
    Y,
    Z
};

class ACT {
  public:
    ACT(){};
    ~ACT(){};

    double ActOuptut;    /* *o  (rad) Actuator output angle or can be treated as length */
    double ActRateOutput;   /* *o (r/s) Actuator output rate */
    double ActAccOutput;    /* *o  (r/s2)  Actuator output acceleration */

    virtual void Actuate(double input_command, double int_step) = 0;
};  // ACT

class ACT_1st : public ACT {
    TRICK_INTERFACE(ACT_1st);
  public:
    ACT_1st();
    ~ACT_1st(){};

    virtual void Actuate(double input_command, double int_step);

  protected :
    /* Variables declaration */
    double Ang_limit;      /* *o (r) Actuator's maximum deflection angle */
    double Ang_rate_limit; /* *o (r/s) Actuator's maximum angular rate */
    double Ang_acc_limit;  /* *o (r/s2) Actuator's maximum angular acceleration */
    double Tau;            /* *o (--) Actuator's time constant */
    double Act_post_state; /* *o (r) Actuator's post state */
    double Act_prior_state; /* *o (r) Actuator's prior state */
    double Act_prior_rate;  /* *o (r/s) Actuator's proir angular rate */
    double Act_post_rate;   /* *o (r/s) Actuator's post angular rate */
    double Act_acc;         /* *o (r/s2) Actuator's angular acceleration */
};

class ENG {
    TRICK_INTERFACE(ENG);

  public :
    ENG();
    ~ENG();

    /* Variables declaration */
    VECTOR(Q, 6);   /* *o (--)  External force produced by the engine */
    MATRIX(T_N_B, 3, 3);    /* *o  (--)  T.M. from vehicle body to Nozzle */

    /* Function declaration */
    void calculate_Q(double input_ang, enum ActType TYPE);
    void calculate_Q(double input_ang_1, double input_ang_2, enum ActType TYPE);
  
  private :
    /* Variable declaration */
    VECTOR(THRUST, 3);  /* *o (N)  Thrust force generated by the vehicle engine */
    VECTOR(ENG_HINGE_POS, 3);   /* *o (--)  Engine hinge position */
    VECTOR(ENG_GAMMA_1, 3); /* *o (--)  1st DoF Engine velocity coefficient, each DoF
                           have 3 elements */
    VECTOR(ENG_GAMMA_2, 3); /* *o (--)  2nd DoF Engine velocity coefficient, each DoF
                           have 3 elements */
    VECTOR(ENG_GAMMA_3, 3); /* *o (--)  3rd DoF Engine velocity coefficient, each DoF
                           have 3 elements */
    VECTOR(ENG_BETA_4, 3);  /* *o (--) 4th DoF Engine angular velocity coefficient,
                           each DoF have 3 elements */
    VECTOR(ENG_BETA_5, 3);  /* *o (--) 5th DoF Engine angular velocity coefficient,
                           each DoF have 3 elements */
    VECTOR(ENG_BETA_6, 3);  /* *o (--) 6th DoF Engine angular velocity coefficient,
                           each DoF have 3 elements */
    int num_act;          /* *o (--) How many actuators engine have */
    ACT **Act_list;
}

#endif  // Component_HH