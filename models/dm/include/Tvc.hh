#ifndef __TVC_HH__
#define __TVC_HH__
/********************************* TRICK HEADER *******************************
PURPOSE:
      (Describe the TVC Module On Board)
LIBRARY DEPENDENCY:
      ((../src/Tvc.cpp))
*******************************************************************************/
#include <armadillo>
#include <functional>
#include <tuple>
#include <vector>
#include "Component.hh"
#include "Module.hh"
#include "aux.hh"
#include "global_constants.hh"
#include "icf_trx_ctrl.h"

class TVC : public Dynamics {
  TRICK_INTERFACE(TVC);

 public:
  TVC(Data_exchang &input);
  TVC(const TVC &other);

  TVC &operator=(const TVC &other);

  virtual void init();

  virtual void algorithm(double int_step);
  void Allocate_ENG(int NumEng, std::vector<ENG *> &Eng_list);

  enum TVC_TYPE {
    NO_TVC = 0,
    NO_DYNAMIC_TVC,
    SECON_ORDER_TVC,          // TVC Second order dynamics with rate limiting
    ONLINE_SECOND_ORDER_TVC,  // same as 2nd order but with on-line TVC gain
    S2_TVC,
    S3_TVC
  };

  enum TVC_TYPE get_mtvc();
  void set_mtvc(enum TVC_TYPE);
  void set_S2_TVC();
  void set_S3_TVC();

  std::function<double()> grab_theta_a_cmd;
  std::function<double()> grab_theta_b_cmd;
  std::function<double()> grab_theta_c_cmd;
  std::function<double()> grab_theta_d_cmd;
  std::vector<ENG *> S2_Eng_list;
  std::vector<ENG *> S3_Eng_list;

 private:
  /* Internal Initializers */
  void default_data();

  /* State */
  enum TVC_TYPE mtvc; /* *o  (--)      see TVC_TYPE */

  /* Constants */
  double gtvc; /* *o  (--)    TVC nozzle deflection gain n*/

  double theta_a_cmd;  /* *o (r)  Store first actuator command */
  double theta_b_cmd;  /* *o (r)  Store second actuator command */
  double theta_c_cmd;  /* *o (r)  Store third actuator command */
  double theta_d_cmd;  /* *o (r)  Store fourth actuator command */
  double ActOutput1;   /* *o (r)  Store first actuator output value for trick data record */
  double ActOutput2;   /* *o (r)  Store second actuator output value for trick data record */
  double ActOutput3;   /* *o (r)  Store third actuator output value for trick data record */
  double ActOutput4;   /* *o (r)  Store fourth actuator output value for trick data record */

  VECTOR(Q_TVC, 6);    /* *o (--) External force generated by the rocket engines */
};

#endif  // __TVC_HH__
