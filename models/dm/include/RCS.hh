#ifndef __RCS_HH__
#define __RCS_HH__

#include "Vehicle.hh"
/********************************* TRICK HEADER *******************************
PURPOSE:
      (Describe the RCS thruster Module)
LIBRARY DEPENDENCY:
      ((../src/RCS.cpp))
PROGRAMMERS:
      (((Chun-Hsu Lai) () () () ))
*******************************************************************************/
#include <armadillo>
#include <functional>
#include <vector>
#include "Component.hh"
#include "Module.hh"

class RCS : public Dynamics {
  TRICK_INTERFACE(RCS);

 public:
  RCS(Data_exchang &input);
  RCS(const RCS &other);

  virtual void algorithm(double int_step);
  virtual void init();
  void Allocate_RCS(int num, std::vector<RCS_Thruster *> &RT_list);

  std::vector<RCS_Thruster *> Thruster_list;

  std::function<double()> grab_e_roll;
  std::function<double()> grab_e_pitch;
  std::function<double()> grab_e_yaw;

 private:
  VECTOR(Q_RCS, 6); /* ** (--)  External force generated by RCS thruster */
};

#endif  //__RCS_HH__